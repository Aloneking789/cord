//! Autogenerated weights for pallet_multisig
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-05-14, STEPS: [3, ], REPEAT: 2, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Interpreted, CHAIN: Some("dev"), DB
//! CACHE: 128

// Executed Command:
// ./target/release/cord
// benchmark
// --chain=dev
// --execution=wasm
// --pallet=pallet_multisig
// --extrinsic=*
// --steps=3
// --repeat=2
// --output=./runtime/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for pallet_multisig.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_multisig::WeightInfo for WeightInfo<T> {
	fn as_multi_threshold_1(z: u32) -> Weight {
		(96_147_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((82_000 as Weight).saturating_mul(z as Weight))
	}
	fn as_multi_create(s: u32, _z: u32) -> Weight {
		(396_036_000 as Weight)
			// Standard Error: 437_000
			.saturating_add((143_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn as_multi_create_store(_s: u32, z: u32) -> Weight {
		(730_417_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((88_000 as Weight).saturating_mul(z as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn as_multi_approve(s: u32, z: u32) -> Weight {
		(153_749_000 as Weight)
			// Standard Error: 399_000
			.saturating_add((2_240_000 as Weight).saturating_mul(s as Weight))
			// Standard Error: 3_000
			.saturating_add((5_000 as Weight).saturating_mul(z as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn as_multi_approve_store(s: u32, z: u32) -> Weight {
		(386_009_000 as Weight)
			// Standard Error: 1_019_000
			.saturating_add((1_963_000 as Weight).saturating_mul(s as Weight))
			// Standard Error: 9_000
			.saturating_add((102_000 as Weight).saturating_mul(z as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn as_multi_complete(s: u32, z: u32) -> Weight {
		(0 as Weight)
			// Standard Error: 2_882_000
			.saturating_add((16_412_000 as Weight).saturating_mul(s as Weight))
			// Standard Error: 28_000
			.saturating_add((298_000 as Weight).saturating_mul(z as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn approve_as_multi_create(s: u32) -> Weight {
		(310_040_000 as Weight)
			// Standard Error: 544_000
			.saturating_add((921_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn approve_as_multi_approve(s: u32) -> Weight {
		(202_972_000 as Weight)
			// Standard Error: 197_000
			.saturating_add((1_764_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn approve_as_multi_complete(s: u32) -> Weight {
		(5_208_518_000 as Weight)
			// Standard Error: 5_286_000
			.saturating_add((10_530_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn cancel_as_multi(s: u32) -> Weight {
		(2_104_241_000 as Weight)
			// Standard Error: 3_753_000
			.saturating_add((5_442_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
