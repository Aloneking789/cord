# This is a basic workflow to help you get started with Actions

name: CI

# Control when the action will run. 
on:
  # Trigger the workflow on push event
  push:
    # branches: [ main, develop ]

  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Skip based on commit message
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    # A map of envvironment variables available to all steps in the job
    env:
      ACR_LOGIN_SERVER: 2pzinx547jo6coxz.azurecr.io
      IMAGE_REPOSITORY: ${{ github.event.repository.name }}
      IMAGE_TAG: ${{ github.sha }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Configure AWS credentials
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Login to Amazon ECR
      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Login to Azure ACR
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.SP_APP_ID }}
          password: ${{ secrets.SP_PASSWD }}

      # Push image to Registry
      - env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build . --no-cache --file Dockerfile --tag ${{ env.IMAGE_REPOSITORY }}:latest
          
          docker tag ${{ env.IMAGE_REPOSITORY }}:latest $ECR_REGISTRY/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} && \
          docker tag ${{ env.IMAGE_REPOSITORY }}:latest $ECR_REGISTRY/${{ env.IMAGE_REPOSITORY }}:latest
          
          docker push $ECR_REGISTRY/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} && \
          docker push $ECR_REGISTRY/${{ env.IMAGE_REPOSITORY }}:latest

          docker tag ${{ env.IMAGE_REPOSITORY }}:latest $ACR_LOGIN_SERVER/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} && \
          docker tag ${{ env.IMAGE_REPOSITORY }}:latest $ACR_LOGIN_SERVER/${{ env.IMAGE_REPOSITORY }}:latest
          
          docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} && \
          docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_REPOSITORY }}:latest
